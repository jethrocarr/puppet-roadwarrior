# ipsec.conf - strongSwan IPsec configuration file
# Generated by Puppet "roadwarrior" module


config setup
    # Setting this to "yes" rather than "never" could cause issues with some
    # devices that maintain dual tunnels (eg one on WiFi, one on 4G) but it's
    # needed to ensure compatibility with iOS 10 due to how it
    # drops/re-establishes tunnels.
    uniqueids = yes

<% if @debug_logging -%>
    # Increase the debugging level - recommended if having trouble getting things to work.
    charondebug="cfg 2, dmn 2, ike 2, net 2"
<% end %>


# The following configuration matches for all connections, but
# certain values/parameters are overriden by the subsequent three
# configurations below.
conn %default
    # Timing rules & connection
    ikelifetime=60m
    keylife=20m
    rekeymargin=3m
    keyingtries=1

    # IKEv2 for all connections by default
    keyexchange=ikev2

    # Allow connection on any interface on the VPN server
    left=%any

    # Network ranges to push to the device (split routing)
    leftsubnet=<%= @vpn_route_v4 %>

    # Use certificate-based authentication
    leftid=<%= @vpn_name -%>      # CN of the VPN server for cert authentication
    leftcert=vpnHostCert.pem      # The cert file to use for the VPN server (looks in /etc/ipsec.d/certs/)
    leftsendcert=always           # Send the CA cert in the connection request
    leftfirewall=<% if @vpn_behind_firewall %>yes<% else %>no<% end %> # VPN server behind firewall

    # Any device from anywhere can attempt to establish a connection
    right=%any

    # Network range to assign to VPN devices. This must be routable back to
    # the VPN server from anything on the network if a masquerade rule is not
    # configured.
    rightsourceip=<%= @vpn_range_v4 %>

    <% if @vpn_dns_servers.length > 0 -%>
    # DNS Servers that will override those already configured on clients
    rightdns=<%= @vpn_dns_servers %>
    <% end -%>

    # Automatically setup OS routes for VPN ranges
    auto=add


# Basic IKEv2 VPN connection using cert-based authentication
conn IPSec-IKEv2
    keyexchange=ikev2
    leftauth=pubkey
    rightauth=pubkey
    leftsendcert=always
    auto=add

# IKEv2 with additional EAP-TLS validation. This uses the same
# certs as the connection cert with our config.
# TODO: Do we actually need this? Haven't yet run into devices
# that can only do IKEv2 with EAP-TLS...?
conn IPSec-IKEv2-EAP
    keyexchange=ikev2
    leftauth=pubkey
    leftsendcert=always
    rightauth=eap-tls
    rightsendcert=never
    eap_identity=%identity
    auto=add

# Classic Cisco-style IPSec for legacy OSes
# TODO: Hasn't been validated - do we even want it?
conn CiscoIPSec
    keyexchange=ikev1
    rightauth=pubkey
    rightauth2=xauth
    auto=add
